//BAD!!! DON'T START NAMES WITH NEW OR COPY

import "MonsterStuff.proto";
import "User.proto";

package com.lvl6.proto;

option java_outer_classname = "BattleProto";
//DO NOT USE ID AS THE NAME OF A PROPERTY IN ANY PROTO

///atm, this file is used by EventPvp.proto

/*
message MinimumUserProtoWithBattleHistory {
	optional MinimumUserProtoWithLevel minUserProtoWithLevel = 1;
	optional int32 battlesWon = 2;
	optional int32 battlesLost = 3;
}
*/
//------------------------------------------------------------------------------------------

enum BattleResult {
   	ATTACKER_WIN = 1;
 	DEFENDER_WIN = 2;
 	ATTACKER_FLEE = 3;
}

//------------------------------------------------------------------------------------------

message PvpProto {
	optional MinimumUserProtoWithLevel defender = 1;
	//optional int32 curElo = 2; //the defender's current elo
	repeated PvpMonsterProto defenderMonsters = 3;
	optional int32 prospectiveCashWinnings = 4;
	optional int32 prospectiveOilWinnings = 5;
	
	optional UserPvpLeagueProto pvpLeagueStats = 6; //defender info
	
	optional string defenderMsg = 7; 
}

message PvpMonsterProto {
	optional MinimumUserMonsterProto defenderMonster = 1;
	
	//if not set then monster piece did not drop
	optional int32 monsterIdDropped = 2;
}

//------------------------------------------------------------------------------------------

message PvpHistoryProto {
	//to reference a pvp history row, need (attackerId, defenderId, battleEndTime)
	//if exacting revenge then need to send battle end time
	optional int64 battleEndTime = 9;
	
	optional FullUserProto attacker = 1; //the person who acted as the attacker
	repeated PvpMonsterProto attackersMonsters = 2; //atm, current monster team
	optional bool attackerWon = 3;
	optional sint32 defenderCashChange = 4;
	optional sint32 defenderOilChange = 5; 
	optional bool exactedRevenge = 6; //whether or not the defender attacked the attacker back
	
	//revenge info if defender can get revenge on attacker
	optional int32 prospectiveCashWinnings = 7;
	optional int32 prospectiveOilWinnings = 8;
	
	//optional int64 battleEndTime = 9; //defined above
	
	//for the attacker/defender
	//need the prev and cur rank 
	//need the prev and cur league
	optional UserPvpLeagueProto attackerBefore = 10; //before the battle
	optional UserPvpLeagueProto attackerAfter = 11; //after the battle
	
	optional UserPvpLeagueProto defenderBefore = 12; //before the battle
	optional UserPvpLeagueProto defenderAfter = 13;  //after the battle
	
	//only set when the user retrieving history and wants who he attacked
	optional FullUserProto defender = 14;
	optional int32 attackerCashChange = 15;
	optional int32 attackerOilChange = 16;
	
	optional bool clanAvenged = 17;
}

//------------------------------------------------------------------------------------------

message PvpLeagueProto {
	optional int32 leagueId = 1;
	optional string leagueName = 2;
	optional string imgPrefix = 3;
	optional string description = 5;
}

//------------------------------------------------------------------------------------------

message PvpClanAvengeProto {
//send every column in clan_avenge table
//send PvpUserClanAvengeProto

	optional string clanAvengeUuid = 1;
	repeated PvpUserClanAvengeProto usersAvenging = 2;
	
	//in clan avenge, this user is the one that will be attacked
	optional MinimumUserProtoWithLevel attacker = 3;
	
	//in clan avenge, this user is in the clan
	optional MinimumUserProto defender = 4;
	
	//this attacker and defender are used to uniquely identify row in pvp_battle_history table
	optional int64 battleEndTime = 5;
	
	//time of entry into clan_avenge table
	optional int64 avengeRequestTime = 6;
	
	optional string defenderClanUuid = 7; 
}

message PvpUserClanAvengeProto {
	//every column in clan_avenge_user table
	optional string userUuid = 1;
	optional string clanUuid = 2;
	optional string clanAvengeUuid = 3;
	optional int64 avengeTime = 4;
}

///atm, this file is used by EventPvp.proto
