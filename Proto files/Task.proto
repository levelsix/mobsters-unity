//ALL REQUEST PROTOS SHOULD INCLUDE A MinimumUserProto AS optional that represents which client sent it/triggered it 
//DO NO START PROPERTY METHODS WITH THE WORDS NEW OR COPY

import "MonsterStuff.proto";
import "SharedEnumConfig.proto";

package com.lvl6.proto;

option java_outer_classname = "TaskProto";
//DO NOT USE ID AS THE NAME OF A PROPERTY IN ANY PROTO

message TaskStageProto {
	optional int32 stageId = 1;
	repeated TaskStageMonsterProto stageMonsters = 2;
}

//------------------------------------------------------------------------------------------

message FullTaskProto {
	optional int32 taskId = 1;
	optional string name = 2;
	optional string description = 3;
	optional int32 cityId = 4;
	optional int32 assetNumWithinCity = 5;
	optional int32 prerequisiteTaskId = 6;
	optional int32 prerequisiteQuestId = 7;
}

//------------------------------------------------------------------------------------------

message MinimumUserTaskProto {
     optional int32 userId = 1;
     optional int32 taskId = 2;
     optional int32 curTaskStageId = 3;
     optional int64 userTaskId = 4;
}

//------------------------------------------------------------------------------------------

message TaskStageMonsterProto {
	optional int32 monsterId = 1;
	optional MonsterType monsterType = 2;
	optional int32 expReward = 3;
	optional int32 cashReward = 4;
	optional int32 oilReward = 8;
	optional bool puzzlePieceDropped = 5;
	optional int32 level = 6;
	
    //NOTE: Some quests have special monsters that spawn, and these special monsters
    //can drop one item at a time. These items only exist as long as the quest is active.
    //In the same vein, the special monsters only exist as long as the quest is active.
    //Either puzzlePieceDropped is true, or this is set to a valid number.
    optional int32 itemId = 7;
	
	//optional int32 oilReward = 8; //defined above
	enum MonsterType {
		REGULAR = 1;
		MINI_BOSS = 2;
		BOSS = 3;
	}
}

//------------------------------------------------------------------------------------------

message PersistentEventProto {
	optional int32 eventId = 1;
	optional DayOfWeek dayOfWeek = 2 [default = MONDAY];
	optional int32 startHour = 3;
	optional int32 eventDurationMinutes = 4;
	optional int32 taskId = 5;
	optional int32 cooldownMinutes = 6;
	optional EventType type = 7;
	optional Element monsterElement = 8 [default = NO_ELEMENT];
	
	enum EventType {
		ENHANCE = 1;
		EVOLUTION = 2;
	}
}

//------------------------------------------------------------------------------------------

message UserPersistentEventProto {
	optional int32 userId = 1;
	optional int32 eventId = 2;
	optional int64 coolDownStartTime = 3;
}
